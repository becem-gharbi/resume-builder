generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                     String         @id @default(uuid())
  name                   String
  email                  String         @unique
  picture                String
  role                   String         @default("user")
  provider               String         @default("default")
  password               String?
  verified               Boolean        @default(false)
  suspended              Boolean        @default(false)
  requestedPasswordReset Boolean        @default(false)
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt
  refreshTokens          RefreshToken[]
  resumes                Resume[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  uid       String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  userAgent String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Resume {
  id        String    @id @default(uuid())
  title     String
  header    Header?
  sections  Section[]
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([title, userId])
}

model Header {
  id       String  @id @default(uuid())
  resumeId String  @unique
  resume   Resume  @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  name     String  @default("John Doe")
  title    String  @default("Web Developer")
  location String  @default("Washington, USA")
  phone    String  @default("+123456")
  email    String  @default("john.doe@exapmle.com")
  photo    String?
}

model Section {
  id       String        @id @default(uuid())
  resumeId String
  resume   Resume        @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  title    String
  enabled  Boolean       @default(true)
  column   Int           @default(0)
  order    Int           @default(0)
  type     String
  items    SectionItem[]

  @@unique([resumeId, title])
  @@unique([resumeId, order, column])
}

model SectionItem {
  id        String  @id @default(uuid())
  sectionId String
  section   Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  type      String  @map("type")
  data      String
  order     Int     @default(0)

  @@unique([sectionId, order])
}
